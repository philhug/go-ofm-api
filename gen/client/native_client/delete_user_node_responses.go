// Code generated by go-swagger; DO NOT EDIT.

package native_client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteUserNodeReader is a Reader for the DeleteUserNode structure.
type DeleteUserNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteUserNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteUserNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUserNodeOK creates a DeleteUserNodeOK with default headers values
func NewDeleteUserNodeOK() *DeleteUserNodeOK {
	return &DeleteUserNodeOK{}
}

/*DeleteUserNodeOK handles this case with default header values.

OK
*/
type DeleteUserNodeOK struct {
}

func (o *DeleteUserNodeOK) Error() string {
	return fmt.Sprintf("[DELETE /nativeclient/user/{id}][%d] deleteUserNodeOK ", 200)
}

func (o *DeleteUserNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserNodeNotFound creates a DeleteUserNodeNotFound with default headers values
func NewDeleteUserNodeNotFound() *DeleteUserNodeNotFound {
	return &DeleteUserNodeNotFound{}
}

/*DeleteUserNodeNotFound handles this case with default header values.

Node not found
*/
type DeleteUserNodeNotFound struct {
}

func (o *DeleteUserNodeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /nativeclient/user/{id}][%d] deleteUserNodeNotFound ", 404)
}

func (o *DeleteUserNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
