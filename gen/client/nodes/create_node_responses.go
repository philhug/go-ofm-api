// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateNodeReader is a Reader for the CreateNode structure.
type CreateNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateNodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNodeOK creates a CreateNodeOK with default headers values
func NewCreateNodeOK() *CreateNodeOK {
	return &CreateNodeOK{}
}

/*CreateNodeOK handles this case with default header values.

OK
*/
type CreateNodeOK struct {
}

func (o *CreateNodeOK) Error() string {
	return fmt.Sprintf("[POST /node/{db}/_create][%d] createNodeOK ", 200)
}

func (o *CreateNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNodeBadRequest creates a CreateNodeBadRequest with default headers values
func NewCreateNodeBadRequest() *CreateNodeBadRequest {
	return &CreateNodeBadRequest{}
}

/*CreateNodeBadRequest handles this case with default header values.

Node already exists, searchTags duplicate. searchTags generated server-side. switch to FIR+Type+Designator, returns id of existing object
*/
type CreateNodeBadRequest struct {
}

func (o *CreateNodeBadRequest) Error() string {
	return fmt.Sprintf("[POST /node/{db}/_create][%d] createNodeBadRequest ", 400)
}

func (o *CreateNodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
